[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "podknow"
version = "0.1.0"
description = "A command-line podcast management and transcription tool"
readme = "README.md"
requires-python = ">=3.13"
license = {text = "MIT"}
authors = [
    {name = "PodKnow Team"},
]
keywords = ["podcast", "transcription", "ai", "cli"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Topic :: Multimedia :: Sound/Audio",
    "Topic :: Text Processing :: Linguistic",
]

dependencies = [
    "mlx-whisper>=0.4.0",
    "requests>=2.31.0",
    "click>=8.1.0",
    "pydantic>=2.5.0",
    "pyyaml>=6.0.1",
    "jinja2>=3.1.0",
    "feedparser>=6.0.10",
    "anthropic>=0.8.0",
    "httpx>=0.25.0",
    "rich>=13.7.0",
    "python-dateutil>=2.8.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.12.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.7.0",
    "ruff>=0.1.0",
]

[project.scripts]
podknow = "podknow.cli.main:cli"

[project.urls]
Homepage = "https://github.com/podknow/podknow"
Repository = "https://github.com/podknow/podknow.git"
Issues = "https://github.com/podknow/podknow/issues"

[tool.hatch.build.targets.wheel]
packages = ["podknow"]

[tool.black]
line-length = 88
target-version = ['py313']

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.ruff]
target-version = "py313"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"